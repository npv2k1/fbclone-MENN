#!/usr/bin/env node

var express = require("../server.js");
var debug = require("debug")("app1:server");
var http = require("http");

// Format Port
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

var port = normalizePort(process.env.PORT || "5000");
express.set("port", port);

// Load nextjs server
const app = require("../app");
const handle = app.getRequestHandler();

app.prepare().then(() => {
  // Khi request không có trong express routine thì chuyển nó thành trang web của nextjs
  express.all("*", (req, res) => {
    return handle(req, res);
  });
  // Tạo http server và ghi log
  var server = http.createServer(express);
  server.on("error", onError);
  server.on("listening", onListening);

  const io = require("socket.io")(server);
  require("../controllers/socket.js")(io);

  function onError(error) {
    if (error.syscall !== "listen") {
      throw error;
    }
    var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
    switch (error.code) {
      case "EACCES":
        console.error(bind + " requires elevated privileges");
        process.exit(1);
        break;
      case "EADDRINUSE":
        console.error(bind + " is already in use");
        process.exit(1);
        break;
      default:
        throw error;
    }
  }
  function onListening() {
    var addr = server.address();
    var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
    debug("Listening on " + bind);
  }
  server.listen(port, (err) => {
    if (err) throw err;
    console.log(`> Ready on http://localhost:${port}`);
  });
});
// module.exports = server; // for testing
